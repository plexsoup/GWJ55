[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://jqx3qm42bku3"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_njrxk"]
parameter_name = "ColorParameter"
default_value_enabled = true
default_value = Color(0.734838, 0.352256, 0.0894091, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_u14pc"]
noise_type = 2
frequency = 0.069
fractal_octaves = 10
fractal_gain = 1.355
fractal_weighted_strength = 0.27
cellular_jitter = -0.206

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_nu5x8"]
noise = SubResource("FastNoiseLite_u14pc")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6nfft"]
texture = SubResource("NoiseTexture2D_nu5x8")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wxcyj"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6mnsp"]
texture = SubResource("NoiseTexture2D_nu5x8")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yeyhn"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_qoyvx"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_roqcw"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0.2, 0, 0)]
op_type = 2
operator = 2

[resource]
code = "shader_type spatial;
uniform sampler2D tex_vtx_2;
uniform vec4 ColorParameter : source_color = vec4(0.734838, 0.352256, 0.089409, 1.000000);
uniform sampler2D tex_frg_3;



void vertex() {
// Texture2D:2
	vec4 n_out2p0 = texture(tex_vtx_2, UV);


// VectorOp:5
	vec4 n_in5p1 = vec4(0.00000, 0.20000, 0.00000, 0.00000);
	vec4 n_out5p0 = n_out2p0 * n_in5p1;


// Input:3
	vec3 n_out3p0 = VERTEX;


// VectorOp:4
	vec4 n_out4p0 = n_out5p0 + vec4(n_out3p0, 0.0);


// Output:0
	NORMAL = vec3(n_out4p0.xyz);


}

void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


// Texture2D:3
	vec4 n_out3p0 = texture(tex_frg_3, UV);


// VectorOp:4
	vec4 n_out4p0 = n_out2p0 * n_out3p0;


// Output:0
	ALBEDO = vec3(n_out4p0.xyz);
	NORMAL_MAP = vec3(n_out3p0.xyz);


}
"
graph_offset = Vector2(-347.75, 47.3689)
nodes/vertex/2/node = SubResource("VisualShaderNodeTexture_6mnsp")
nodes/vertex/2/position = Vector2(-780, 40)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_yeyhn")
nodes/vertex/3/position = Vector2(-420, 420)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorOp_qoyvx")
nodes/vertex/4/position = Vector2(80, 140)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorOp_roqcw")
nodes/vertex/5/position = Vector2(-420, 240)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 1, 2, 0, 5, 0, 5, 0, 4, 0, 4, 0, 0, 1)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_njrxk")
nodes/fragment/2/position = Vector2(-520, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_6nfft")
nodes/fragment/3/position = Vector2(-540, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_wxcyj")
nodes/fragment/4/position = Vector2(-60, 160)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 0, 0, 3, 0, 0, 9)
